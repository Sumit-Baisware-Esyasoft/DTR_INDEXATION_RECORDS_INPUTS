import streamlit as st
import pandas as pd
from datetime import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials

st.set_page_config(page_title="DTR ‡§∏‡•á Consumer Indexation ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ", layout="centered")

# Title in Hindi
st.title("üìë DTR ‡§∏‡•á Consumer Indexation ‡§ï‡•Ä ‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ")

# Load Google credentials from Streamlit Secrets
creds_dict = st.secrets["gcp_service_account"]

scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive"
]

credentials = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(credentials)

# Open your Google Sheet (make sure this name matches your actual sheet)
SHEET_NAME = "MyDTRSheet"
sheet = client.open(SHEET_NAME).sheet1

# --------- Form Inputs ----------
feeder_code = st.text_input("Feeder Code")
dtr_code = st.text_input("DTR Code")
dtr_meter_serial = st.text_input("DTR Meter Serial Number")

# --- Custom time picker (slider based) ---
def custom_time_picker(label):
    st.write(f"### {label}")
    col1, col2, col3 = st.columns([2,2,2])

    with col1:
        hour = st.slider(f"{label} - ‡§ò‡§Ç‡§ü‡§æ", 1, 12, 12, key=label+"hour")
    with col2:
        minute = st.slider(f"{label} - ‡§Æ‡§ø‡§®‡§ü", 0, 59, 0, key=label+"minute")
    with col3:
        am_pm = st.radio(f"{label} - AM/PM", ["AM", "PM"], horizontal=True, key=label+"ampm")

    time_str = f"{hour:02d}:{minute:02d} {am_pm}"
    return time_str

# Time inputs
dtr_off_time = custom_time_picker("DTR ‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§∏‡§Æ‡§Ø")
dtr_on_time = custom_time_picker("DTR ‡§ö‡§æ‡§≤‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§∏‡§Æ‡§Ø")

# Date picker
date = st.date_input("‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï ‡§ö‡•Å‡§®‡•á‡§Ç", datetime.today())

# --------- Submit Button ----------
if st.button("Submit"):
    if feeder_code and dtr_code and dtr_meter_serial and dtr_off_time and dtr_on_time and date:
        new_data = [
            feeder_code,
            dtr_code,
            dtr_meter_serial,
            dtr_off_time,
            dtr_on_time,
            date.strftime("%d-%m-%Y")
        ]

        # Append row into Google Sheet
        sheet.append_row(new_data)

        st.success("‚úÖ ‡§°‡•á‡§ü‡§æ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï Google Sheet ‡§Æ‡•á‡§Ç ‡§∏‡•á‡§µ ‡§π‡•ã ‡§ó‡§Ø‡§æ!")
        st.table(pd.DataFrame([new_data], columns=[
            "Feeder Code",
            "DTR Code",
            "DTR Meter Serial Number",
            "DTR ‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§∏‡§Æ‡§Ø",
            "DTR ‡§ö‡§æ‡§≤‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§∏‡§Æ‡§Ø",
            "‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï"
        ]))
    else:
        st.warning("‚ö†Ô∏è ‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡§≠‡•Ä ‡§´‡§º‡•Ä‡§≤‡•ç‡§° ‡§≠‡§∞‡•á‡§Ç, ‡§´‡§ø‡§∞ Submit ‡§ï‡§∞‡•á‡§Ç‡•§")

# --------- Display Latest Records ----------
st.subheader("üìã ‡§∏‡§≠‡•Ä ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§°‡•ç‡§∏")
records = sheet.get_all_records()
if records:
    df = pd.DataFrame(records)
    st.dataframe(df)
else:
    st.info("‡§Ö‡§≠‡•Ä ‡§§‡§ï ‡§ï‡•ã‡§à ‡§∞‡§ø‡§ï‡•â‡§∞‡•ç‡§° ‡§∏‡•á‡§µ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•Å‡§Ü ‡§π‡•à‡•§")
